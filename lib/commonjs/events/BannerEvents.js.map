{"version":3,"sources":["BannerEvents.ts"],"names":["IronSourceMediation","NativeModules","ON_BN_AD_LOADED","ON_BN_AD_LOAD_FAILED","ON_BN_AD_CLICKED","ON_BN_AD_SCREEN_PRESENTED","ON_BN_AD_SCREEN_DISMISSED","ON_BN_AD_LEFT_APPLICATION","getConstants","eventEmitter","NativeEventEmitter","onBannerAdLoaded","setListener","listener","removeAllListeners","addListener","removeListener","onBannerAdLoadFailed","errorObj","ironSourceErrorCodec","onBannerAdClicked","onBannerAdScreenPresented","onBannerAdScreenDismissed","onBannerAdLeftApplication","BannerEvents"],"mappings":"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","sourcesContent":["import { NativeEventEmitter, NativeModules } from 'react-native'\nimport { IronSourceError, ironSourceErrorCodec } from '../models'\nimport { decode } from '../models/utils'\n\n// The Main Module\nconst { IronSourceMediation } = NativeModules\n// Event Name Constants defined on each platform\nconst {\n  ON_BN_AD_LOADED,\n  ON_BN_AD_LOAD_FAILED,\n  ON_BN_AD_CLICKED,\n  ON_BN_AD_SCREEN_PRESENTED,\n  ON_BN_AD_SCREEN_DISMISSED,\n  ON_BN_AD_LEFT_APPLICATION,\n} = IronSourceMediation.getConstants()\n\n// Create an EventEmitter to subscribe to BannerListener callbacks\nconst eventEmitter = new NativeEventEmitter(IronSourceMediation)\n\n/**\n * BN Listener Callback Events Handler APIs\n */\n\n/**\n * Android: onBannerAdLoaded\n *     iOS: bannerDidLoad\n */\nconst onBannerAdLoaded = {\n  setListener: (listener: () => void) => {\n    eventEmitter.removeAllListeners(ON_BN_AD_LOADED)\n    eventEmitter.addListener(ON_BN_AD_LOADED, () => listener())\n  },\n  removeListener: () => eventEmitter.removeAllListeners(ON_BN_AD_LOADED),\n}\n\n/**\n * Android: onBannerAdLoadFailed\n *     iOS: bannerDidFailToLoadWithError\n */\nconst onBannerAdLoadFailed = {\n  setListener: (listener: (error: IronSourceError) => void) => {\n    eventEmitter.removeAllListeners(ON_BN_AD_LOAD_FAILED)\n    eventEmitter.addListener(ON_BN_AD_LOAD_FAILED, (errorObj: unknown) =>\n      listener(decode(ironSourceErrorCodec, errorObj))\n    )\n  },\n  removeListener: () => eventEmitter.removeAllListeners(ON_BN_AD_LOAD_FAILED),\n}\n\n/**\n * Android: onBannerAdClicked\n *     iOS: didClickBanner\n */\nconst onBannerAdClicked = {\n  setListener: (listener: () => void) => {\n    eventEmitter.removeAllListeners(ON_BN_AD_CLICKED)\n    eventEmitter.addListener(ON_BN_AD_CLICKED, () => listener())\n  },\n  removeListener: () => eventEmitter.removeAllListeners(ON_BN_AD_CLICKED),\n}\n\n/**\n * Android: onBannerAdScreenPresented\n *     iOS: bannerWillPresentScreen\n */\nconst onBannerAdScreenPresented = {\n  setListener: (listener: () => void) => {\n    eventEmitter.removeAllListeners(ON_BN_AD_SCREEN_PRESENTED)\n    eventEmitter.addListener(ON_BN_AD_SCREEN_PRESENTED, () => listener())\n  },\n  removeListener: () =>\n    eventEmitter.removeAllListeners(ON_BN_AD_SCREEN_PRESENTED),\n}\n\n/**\n * Android: onBannerAdScreenDismissed\n *     iOS: bannerDidDismissScreen\n */\nconst onBannerAdScreenDismissed = {\n  setListener: (listener: () => void) => {\n    eventEmitter.removeAllListeners(ON_BN_AD_SCREEN_DISMISSED)\n    eventEmitter.addListener(ON_BN_AD_SCREEN_DISMISSED, () => listener())\n  },\n  removeListener: () =>\n    eventEmitter.removeAllListeners(ON_BN_AD_SCREEN_DISMISSED),\n}\n\n/**\n * Android: onBannerAdLeftApplication\n *     iOS: bannerWillLeaveApplication\n *\n * Called when a user would be taken out of the application context.\n */\nconst onBannerAdLeftApplication = {\n  setListener: (listener: () => void) => {\n    eventEmitter.removeAllListeners(ON_BN_AD_LEFT_APPLICATION)\n    eventEmitter.addListener(ON_BN_AD_LEFT_APPLICATION, () => listener())\n  },\n  removeListener: () =>\n    eventEmitter.removeAllListeners(ON_BN_AD_LEFT_APPLICATION),\n}\n\nconst removeAllListeners = () => {\n  onBannerAdLoaded.removeListener()\n  onBannerAdLoadFailed.removeListener()\n  onBannerAdClicked.removeListener()\n  onBannerAdScreenPresented.removeListener()\n  onBannerAdScreenDismissed.removeListener()\n  onBannerAdLeftApplication.removeListener()\n}\n\nexport const BannerEvents = {\n  onBannerAdLoaded,\n  onBannerAdLoadFailed,\n  onBannerAdClicked,\n  onBannerAdScreenPresented,\n  onBannerAdScreenDismissed,\n  onBannerAdLeftApplication,\n  removeAllListeners,\n}\n"]}