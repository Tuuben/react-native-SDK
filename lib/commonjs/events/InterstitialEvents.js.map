{"version":3,"sources":["InterstitialEvents.ts"],"names":["IronSourceMediation","NativeModules","ON_IS_AD_READY","ON_IS_AD_LOAD_FAILED","ON_IS_AD_OPENED","ON_IS_AD_CLOSED","ON_IS_AD_SHOW_SUCCEEDED","ON_IS_AD_SHOW_FAILED","ON_IS_AD_CLICKED","getConstants","eventEmitter","NativeEventEmitter","onInterstitialAdReady","setListener","listener","removeAllListeners","addListener","removeListener","onInterstitialAdLoadFailed","errorObj","ironSourceErrorCodec","onInterstitialAdOpened","onInterstitialAdClosed","onInterstitialAdShowSucceeded","onInterstitialAdShowFailed","onInterstitialAdClicked","InterstitialEvents"],"mappings":"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","sourcesContent":["import { NativeEventEmitter, NativeModules } from 'react-native'\nimport { IronSourceError, ironSourceErrorCodec } from '../models'\nimport { decode } from '../models/utils'\n\n// The Main Module\nconst { IronSourceMediation } = NativeModules\n// Event Name Constants defined on each platform\nconst {\n  ON_IS_AD_READY,\n  ON_IS_AD_LOAD_FAILED,\n  ON_IS_AD_OPENED,\n  ON_IS_AD_CLOSED,\n  ON_IS_AD_SHOW_SUCCEEDED,\n  ON_IS_AD_SHOW_FAILED,\n  ON_IS_AD_CLICKED,\n} = IronSourceMediation.getConstants()\n\n// Create an EventEmitter to subscribe to InterstitialListener callbacks\nconst eventEmitter = new NativeEventEmitter(IronSourceMediation)\n\n/**\n * IS Listener Callback Events Handler APIs\n */\n\n/**\n * Android: onInterstitialAdReady\n *     iOS: interstitialDidLoad\n */\nconst onInterstitialAdReady = {\n  setListener: (listener: () => void) => {\n    eventEmitter.removeAllListeners(ON_IS_AD_READY)\n    eventEmitter.addListener(ON_IS_AD_READY, () => listener())\n  },\n  removeListener: () => eventEmitter.removeAllListeners(ON_IS_AD_READY),\n}\n\n/**\n * Android: onInterstitialAdLoadFailed\n *     iOS: interstitialDidFailToLoadWithError\n */\nconst onInterstitialAdLoadFailed = {\n  setListener: (listener: (error: IronSourceError) => void) => {\n    eventEmitter.removeAllListeners(ON_IS_AD_LOAD_FAILED)\n    eventEmitter.addListener(ON_IS_AD_LOAD_FAILED, (errorObj: unknown) =>\n      listener(decode(ironSourceErrorCodec, errorObj))\n    )\n  },\n  removeListener: () => eventEmitter.removeAllListeners(ON_IS_AD_LOAD_FAILED),\n}\n\n/**\n * Android: onInterstitialAdOpened\n *     iOS: interstitialDidOpen\n */\nconst onInterstitialAdOpened = {\n  setListener: (listener: () => void) => {\n    eventEmitter.removeAllListeners(ON_IS_AD_OPENED)\n    eventEmitter.addListener(ON_IS_AD_OPENED, () => listener())\n  },\n  removeListener: () => eventEmitter.removeAllListeners(ON_IS_AD_OPENED),\n}\n\n/**\n * Android: onInterstitialAdClosed\n *     iOS: interstitialDidClose\n */\nconst onInterstitialAdClosed = {\n  setListener: (listener: () => void) => {\n    eventEmitter.removeAllListeners(ON_IS_AD_CLOSED)\n    eventEmitter.addListener(ON_IS_AD_CLOSED, () => listener())\n  },\n  removeListener: () => eventEmitter.removeAllListeners(ON_IS_AD_CLOSED),\n}\n\n/**\n * Android: onInterstitialAdShowSucceeded\n *     iOS: interstitialDidShow\n */\nconst onInterstitialAdShowSucceeded = {\n  setListener: (listener: () => void) => {\n    eventEmitter.removeAllListeners(ON_IS_AD_SHOW_SUCCEEDED)\n    eventEmitter.addListener(ON_IS_AD_SHOW_SUCCEEDED, () => listener())\n  },\n  removeListener: () =>\n    eventEmitter.removeAllListeners(ON_IS_AD_SHOW_SUCCEEDED),\n}\n\n/**\n * Android: onInterstitialAdShowFailed\n *     iOS: interstitialDidFailToShowWithError\n */\nconst onInterstitialAdShowFailed = {\n  setListener: (listener: (error: IronSourceError) => void) => {\n    eventEmitter.removeAllListeners(ON_IS_AD_SHOW_FAILED)\n    eventEmitter.addListener(ON_IS_AD_SHOW_FAILED, (errorObj: unknown) =>\n      listener(decode(ironSourceErrorCodec, errorObj))\n    )\n  },\n  removeListener: () => eventEmitter.removeAllListeners(ON_IS_AD_SHOW_FAILED),\n}\n\n/**\n * Android: onInterstitialAdClicked\n *     iOS: didClickInterstitial\n */\nconst onInterstitialAdClicked = {\n  setListener: (listener: () => void) => {\n    eventEmitter.removeAllListeners(ON_IS_AD_CLICKED)\n    eventEmitter.addListener(ON_IS_AD_CLICKED, () => listener())\n  },\n  removeListener: () => eventEmitter.removeAllListeners(ON_IS_AD_CLICKED),\n}\n\nconst removeAllListeners = () => {\n  onInterstitialAdReady.removeListener()\n  onInterstitialAdLoadFailed.removeListener()\n  onInterstitialAdOpened.removeListener()\n  onInterstitialAdClosed.removeListener()\n  onInterstitialAdShowSucceeded.removeListener()\n  onInterstitialAdShowFailed.removeListener()\n  onInterstitialAdClicked.removeListener()\n}\n\nexport const InterstitialEvents = {\n  onInterstitialAdReady,\n  onInterstitialAdLoadFailed,\n  onInterstitialAdOpened,\n  onInterstitialAdClosed,\n  onInterstitialAdShowSucceeded,\n  onInterstitialAdShowFailed,\n  onInterstitialAdClicked,\n  removeAllListeners,\n}\n"]}