{"version":3,"sources":["LevelPlayRewardedVideoEvents.ts"],"names":["IronSourceMediation","NativeModules","LP_RV_ON_AD_AVAILABLE","LP_RV_ON_AD_UNAVAILABLE","LP_RV_ON_AD_OPENED","LP_RV_ON_AD_CLOSED","LP_RV_ON_AD_REWARDED","LP_RV_ON_AD_SHOW_FAILED","LP_RV_ON_AD_CLICKED","LP_MANUAL_RV_ON_AD_READY","LP_MANUAL_RV_ON_AD_LOAD_FAILED","getConstants","eventEmitter","NativeEventEmitter","onAdAvailable","setListener","listener","removeAllListeners","addListener","adInfoObj","ironSourceAdInfoCodec","removeListener","onAdUnavailable","onAdOpened","onAdClosed","onAdRewarded","obj","placement","adInfo","placementAdInfoCodec","onAdShowFailed","error","errorAdInfoCodec","onAdClicked","onAdReady","onAdLoadFailed","errorObj","ironSourceErrorCodec","LevelPlayRewardedVideoEvents"],"mappings":"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","sourcesContent":["import { NativeEventEmitter, NativeModules } from 'react-native'\nimport { errorAdInfoCodec, placementAdInfoCodec } from '../models/nestedCodecs'\nimport {\n  ironSourceErrorCodec,\n  IronSourceError,\n  IronSourceRVPlacement,\n  IronSourceAdInfo,\n  ironSourceAdInfoCodec,\n} from '../models'\nimport { decode } from '../models/utils'\n\n// The Main Module\nconst { IronSourceMediation } = NativeModules\n// Event Name Constants defined on each platform\nconst {\n  LP_RV_ON_AD_AVAILABLE,\n  LP_RV_ON_AD_UNAVAILABLE,\n  LP_RV_ON_AD_OPENED,\n  LP_RV_ON_AD_CLOSED,\n  LP_RV_ON_AD_REWARDED,\n  LP_RV_ON_AD_SHOW_FAILED,\n  LP_RV_ON_AD_CLICKED,\n  // Manual Load RV Events\n  LP_MANUAL_RV_ON_AD_READY,\n  LP_MANUAL_RV_ON_AD_LOAD_FAILED,\n} = IronSourceMediation.getConstants()\n\n// Create an EventEmitter to subscribe to RewardedVideoListener callbacks\nconst eventEmitter = new NativeEventEmitter(IronSourceMediation)\n\n/**\n * LevelPlay RV Listener Callback Events Handler APIs\n */\n\n/**\n * Android: onAdAvailable\n *     iOS: hasAvailableAdWithAdInfo\n */\nconst onAdAvailable = {\n  setListener: (listener: (adInfo: IronSourceAdInfo) => void) => {\n    eventEmitter.removeAllListeners(LP_RV_ON_AD_AVAILABLE)\n    eventEmitter.addListener(LP_RV_ON_AD_AVAILABLE, (adInfoObj: unknown) => {\n      listener(decode(ironSourceAdInfoCodec, adInfoObj))\n    })\n  },\n  removeListener: () => eventEmitter.removeAllListeners(LP_RV_ON_AD_AVAILABLE),\n}\n\n/**\n * Android: onAdUnavailable\n *     iOS: hasNoAvailableAd\n */\nconst onAdUnavailable = {\n  setListener: (listener: () => void) => {\n    eventEmitter.removeAllListeners(LP_RV_ON_AD_UNAVAILABLE)\n    eventEmitter.addListener(LP_RV_ON_AD_UNAVAILABLE, () => listener())\n  },\n  removeListener: () =>\n    eventEmitter.removeAllListeners(LP_RV_ON_AD_UNAVAILABLE),\n}\n\n/**\n * Android: onAdOpened\n *     iOS: didOpenWithAdInfo\n */\nconst onAdOpened = {\n  setListener: (listener: (adInfo: IronSourceAdInfo) => void) => {\n    eventEmitter.removeAllListeners(LP_RV_ON_AD_OPENED)\n    eventEmitter.addListener(LP_RV_ON_AD_OPENED, (adInfoObj: unknown) => {\n      listener(decode(ironSourceAdInfoCodec, adInfoObj))\n    })\n  },\n  removeListener: () => eventEmitter.removeAllListeners(LP_RV_ON_AD_OPENED),\n}\n\n/**\n * Android: onAdClosed\n *     iOS: didCloseWithAdInfo\n */\nconst onAdClosed = {\n  setListener: (listener: (adInfo: IronSourceAdInfo) => void) => {\n    eventEmitter.removeAllListeners(LP_RV_ON_AD_CLOSED)\n    eventEmitter.addListener(LP_RV_ON_AD_CLOSED, (adInfoObj: unknown) => {\n      listener(decode(ironSourceAdInfoCodec, adInfoObj))\n    })\n  },\n  removeListener: () => eventEmitter.removeAllListeners(LP_RV_ON_AD_CLOSED),\n}\n\n/**\n * Android: onAdRewarded\n *     iOS: didReceiveRewardForPlacement\n */\nconst onAdRewarded = {\n  setListener: (\n    listener: (\n      placement: IronSourceRVPlacement,\n      adInfo: IronSourceAdInfo\n    ) => void\n  ) => {\n    eventEmitter.removeAllListeners(LP_RV_ON_AD_REWARDED)\n    eventEmitter.addListener(LP_RV_ON_AD_REWARDED, (obj: unknown) => {\n      const { placement, adInfo } = decode(placementAdInfoCodec, obj)\n      listener(placement, adInfo)\n    })\n  },\n  removeListener: () => eventEmitter.removeAllListeners(LP_RV_ON_AD_REWARDED),\n}\n\n/**\n * Android: onAdShowFailed\n *     iOS: didFailToShowWithError\n */\nconst onAdShowFailed = {\n  setListener: (\n    listener: (error: IronSourceError, adInfo: IronSourceAdInfo) => void\n  ) => {\n    eventEmitter.removeAllListeners(LP_RV_ON_AD_SHOW_FAILED)\n    eventEmitter.addListener(LP_RV_ON_AD_SHOW_FAILED, (obj: unknown) => {\n      const { error, adInfo } = decode(errorAdInfoCodec, obj)\n      listener(error, adInfo)\n    })\n  },\n  removeListener: () =>\n    eventEmitter.removeAllListeners(LP_RV_ON_AD_SHOW_FAILED),\n}\n\n/**\n * Android: onAdClicked\n *     iOS: didClick\n */\nconst onAdClicked = {\n  setListener: (\n    listener: (\n      placement: IronSourceRVPlacement,\n      adInfo: IronSourceAdInfo\n    ) => void\n  ) => {\n    eventEmitter.removeAllListeners(LP_RV_ON_AD_CLICKED)\n    eventEmitter.addListener(LP_RV_ON_AD_CLICKED, (obj: unknown) => {\n      const { placement, adInfo } = decode(placementAdInfoCodec, obj)\n      listener(placement, adInfo)\n    })\n  },\n  removeListener: () => eventEmitter.removeAllListeners(LP_RV_ON_AD_CLICKED),\n}\n\n/**\n * Manual Load RV\n * Android: onAdReady\n *     iOS: didLoadWithAdInfo\n */\nconst onAdReady = {\n  setListener: (listener: (adInfo: IronSourceAdInfo) => void) => {\n    eventEmitter.removeAllListeners(LP_MANUAL_RV_ON_AD_READY)\n    eventEmitter.addListener(LP_MANUAL_RV_ON_AD_READY, (adInfoObj: unknown) => {\n      listener(decode(ironSourceAdInfoCodec, adInfoObj))\n    })\n  },\n  removeListener: () => {\n    eventEmitter.removeAllListeners(LP_MANUAL_RV_ON_AD_READY)\n  },\n}\n\n/**\n * Manual Load RV\n * Android: onAdLoadFailed\n *     iOS: didFailToLoadWithError\n */\nconst onAdLoadFailed = {\n  setListener: (listener: (error: IronSourceError) => void) => {\n    eventEmitter.removeAllListeners(LP_MANUAL_RV_ON_AD_LOAD_FAILED)\n    eventEmitter.addListener(\n      LP_MANUAL_RV_ON_AD_LOAD_FAILED,\n      (errorObj: unknown) => listener(decode(ironSourceErrorCodec, errorObj))\n    )\n  },\n  removeListener: () =>\n    eventEmitter.removeAllListeners(LP_MANUAL_RV_ON_AD_LOAD_FAILED),\n}\n\nconst removeAllListeners = () => {\n  onAdAvailable.removeListener()\n  onAdUnavailable.removeListener()\n  onAdOpened.removeListener()\n  onAdClosed.removeListener()\n  onAdRewarded.removeListener()\n  onAdShowFailed.removeListener()\n  onAdClicked.removeListener()\n  onAdReady.removeListener()\n  onAdLoadFailed.removeListener()\n}\n\nexport const LevelPlayRewardedVideoEvents = {\n  onAdAvailable,\n  onAdUnavailable,\n  onAdOpened,\n  onAdClosed,\n  onAdRewarded,\n  onAdShowFailed,\n  onAdClicked,\n  onAdReady,\n  onAdLoadFailed,\n  removeAllListeners,\n}\n"]}