{"version":3,"sources":["errors.ts"],"names":["ironSourceErrorProps","errorCode","t","number","message","string","ironSourceErrorCodec","type","consentViewProps","consentViewType","consentViewErrorCodec"],"mappings":";;;;;;;AAAA;;AACA;;;;;;AAEA;AACA;AACA;AAEA;AACA,MAAMA,oBAAoB,GAAG;AAC3BC,EAAAA,SAAS,EAAEC,CAAC,CAACC,MADc;AAE3BC,EAAAA,OAAO,EAAE,qBAASF,CAAC,CAACG,MAAX;AAFkB,CAA7B,C,CAKA;;AACO,MAAMC,oBAAoB,GAAGJ,CAAC,CAACK,IAAF,CAAOP,oBAAP,CAA7B,C,CAEP;;;;AAGA;AACA;AACA;AAEA;AACA,MAAMQ,gBAAgB,GAAG,EACvB,GAAGR,oBADoB;AAEvBS,EAAAA,eAAe,EAAEP,CAAC,CAACG;AAFI,CAAzB,C,CAKA;;AACO,MAAMK,qBAAqB,GAAGR,CAAC,CAACK,IAAF,CAAOC,gBAAP,CAA9B,C,CAEP","sourcesContent":["import * as t from 'io-ts'\nimport { optional } from './utils'\n\n/**\n * Used for Event Listeners\n */\n\n// props\nconst ironSourceErrorProps = {\n  errorCode: t.number,\n  message: optional(t.string),\n}\n\n// codec\nexport const ironSourceErrorCodec = t.type(ironSourceErrorProps)\n\n// type\nexport type IronSourceError = t.TypeOf<typeof ironSourceErrorCodec>\n\n/**\n * iOS 14 ConsentView =========================================================\n */\n\n// props\nconst consentViewProps = {\n  ...ironSourceErrorProps,\n  consentViewType: t.string,\n}\n\n// codec\nexport const consentViewErrorCodec = t.type(consentViewProps)\n\n// type\nexport type ConsentViewError = {\n  consentViewType: string\n} & IronSourceError\n"]}