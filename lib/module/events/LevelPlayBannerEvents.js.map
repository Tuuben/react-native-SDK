{"version":3,"sources":["LevelPlayBannerEvents.ts"],"names":["NativeEventEmitter","NativeModules","ironSourceAdInfoCodec","ironSourceErrorCodec","decode","IronSourceMediation","LP_BN_ON_AD_LOADED","LP_BN_ON_AD_LOAD_FAILED","LP_BN_ON_AD_CLICKED","LP_BN_ON_AD_SCREEN_PRESENTED","LP_BN_ON_AD_SCREEN_DISMISSED","LP_BN_ON_AD_LEFT_APPLICATION","getConstants","eventEmitter","onAdLoaded","setListener","listener","removeAllListeners","addListener","adInfoObj","removeListener","onAdLoadFailed","errorObj","onAdClicked","onAdScreenPresented","onAdScreenDismissed","onAdLeftApplication","LevelPlayBannerEvents"],"mappings":"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","sourcesContent":["import { NativeEventEmitter, NativeModules } from 'react-native'\nimport {\n  IronSourceAdInfo,\n  ironSourceAdInfoCodec,\n  IronSourceError,\n  ironSourceErrorCodec,\n} from '../models'\nimport { decode } from '../models/utils'\n\n// The Main Module\nconst { IronSourceMediation } = NativeModules\n// Event Name Constants defined on each platform\nconst {\n  LP_BN_ON_AD_LOADED,\n  LP_BN_ON_AD_LOAD_FAILED,\n  LP_BN_ON_AD_CLICKED,\n  LP_BN_ON_AD_SCREEN_PRESENTED,\n  LP_BN_ON_AD_SCREEN_DISMISSED,\n  LP_BN_ON_AD_LEFT_APPLICATION,\n} = IronSourceMediation.getConstants()\n\n// Create an EventEmitter to subscribe to BannerListener callbacks\nconst eventEmitter = new NativeEventEmitter(IronSourceMediation)\n\n/**\n * BN Listener Callback Events Handler APIs\n */\n\n/**\n * Android: onAdLoaded\n *     iOS:\n */\nconst onAdLoaded = {\n  setListener: (listener: (adInfo: IronSourceAdInfo) => void) => {\n    eventEmitter.removeAllListeners(LP_BN_ON_AD_LOADED)\n    eventEmitter.addListener(LP_BN_ON_AD_LOADED, (adInfoObj: unknown) => {\n      listener(decode(ironSourceAdInfoCodec, adInfoObj))\n    })\n  },\n  removeListener: () => eventEmitter.removeAllListeners(LP_BN_ON_AD_LOADED),\n}\n\n/**\n * Android: onAdLoadFailed\n *     iOS:\n */\nconst onAdLoadFailed = {\n  setListener: (listener: (error: IronSourceError) => void) => {\n    eventEmitter.removeAllListeners(LP_BN_ON_AD_LOAD_FAILED)\n    eventEmitter.addListener(LP_BN_ON_AD_LOAD_FAILED, (errorObj: unknown) =>\n      listener(decode(ironSourceErrorCodec, errorObj))\n    )\n  },\n  removeListener: () =>\n    eventEmitter.removeAllListeners(LP_BN_ON_AD_LOAD_FAILED),\n}\n\n/**\n * Android: onAdClicked\n *     iOS:\n */\nconst onAdClicked = {\n  setListener: (listener: (adInfo: IronSourceAdInfo) => void) => {\n    eventEmitter.removeAllListeners(LP_BN_ON_AD_CLICKED)\n    eventEmitter.addListener(LP_BN_ON_AD_CLICKED, (adInfoObj: unknown) => {\n      listener(decode(ironSourceAdInfoCodec, adInfoObj))\n    })\n  },\n  removeListener: () => eventEmitter.removeAllListeners(LP_BN_ON_AD_CLICKED),\n}\n\n/**\n * Android: onAdScreenPresented\n *     iOS:\n */\nconst onAdScreenPresented = {\n  setListener: (listener: (adInfo: IronSourceAdInfo) => void) => {\n    eventEmitter.removeAllListeners(LP_BN_ON_AD_SCREEN_PRESENTED)\n    eventEmitter.addListener(\n      LP_BN_ON_AD_SCREEN_PRESENTED,\n      (adInfoObj: unknown) => {\n        listener(decode(ironSourceAdInfoCodec, adInfoObj))\n      }\n    )\n  },\n  removeListener: () =>\n    eventEmitter.removeAllListeners(LP_BN_ON_AD_SCREEN_PRESENTED),\n}\n\n/**\n * Android: onAdScreenDismissed\n *     iOS:\n */\nconst onAdScreenDismissed = {\n  setListener: (listener: (adInfo: IronSourceAdInfo) => void) => {\n    eventEmitter.removeAllListeners(LP_BN_ON_AD_SCREEN_DISMISSED)\n    eventEmitter.addListener(\n      LP_BN_ON_AD_SCREEN_DISMISSED,\n      (adInfoObj: unknown) => {\n        listener(decode(ironSourceAdInfoCodec, adInfoObj))\n      }\n    )\n  },\n  removeListener: () =>\n    eventEmitter.removeAllListeners(LP_BN_ON_AD_SCREEN_DISMISSED),\n}\n\n/**\n * Android: onAdLeftApplication\n *     iOS:\n *\n * Called when a user would be taken out of the application context.\n */\nconst onAdLeftApplication = {\n  setListener: (listener: (adInfo: IronSourceAdInfo) => void) => {\n    eventEmitter.removeAllListeners(LP_BN_ON_AD_LEFT_APPLICATION)\n    eventEmitter.addListener(\n      LP_BN_ON_AD_LEFT_APPLICATION,\n      (adInfoObj: unknown) => {\n        listener(decode(ironSourceAdInfoCodec, adInfoObj))\n      }\n    )\n  },\n  removeListener: () =>\n    eventEmitter.removeAllListeners(LP_BN_ON_AD_LEFT_APPLICATION),\n}\n\nconst removeAllListeners = () => {\n  onAdLoaded.removeListener()\n  onAdLoadFailed.removeListener()\n  onAdClicked.removeListener()\n  onAdScreenPresented.removeListener()\n  onAdScreenDismissed.removeListener()\n  onAdLeftApplication.removeListener()\n}\n\nexport const LevelPlayBannerEvents = {\n  onAdLoaded,\n  onAdLoadFailed,\n  onAdClicked,\n  onAdScreenPresented,\n  onAdScreenDismissed,\n  onAdLeftApplication,\n  removeAllListeners,\n}\n"]}