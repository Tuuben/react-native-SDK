{"version":3,"sources":["errors.ts"],"names":["t","optional","ironSourceErrorProps","errorCode","number","message","string","ironSourceErrorCodec","type","consentViewProps","consentViewType","consentViewErrorCodec"],"mappings":"AAAA,OAAO,KAAKA,CAAZ,MAAmB,OAAnB;AACA,SAASC,QAAT,QAAyB,SAAzB;AAEA;AACA;AACA;AAEA;;AACA,MAAMC,oBAAoB,GAAG;AAC3BC,EAAAA,SAAS,EAAEH,CAAC,CAACI,MADc;AAE3BC,EAAAA,OAAO,EAAEJ,QAAQ,CAACD,CAAC,CAACM,MAAH;AAFU,CAA7B,C,CAKA;;AACA,OAAO,MAAMC,oBAAoB,GAAGP,CAAC,CAACQ,IAAF,CAAON,oBAAP,CAA7B,C,CAEP;;AAGA;AACA;AACA;AAEA;AACA,MAAMO,gBAAgB,GAAG,EACvB,GAAGP,oBADoB;AAEvBQ,EAAAA,eAAe,EAAEV,CAAC,CAACM;AAFI,CAAzB,C,CAKA;;AACA,OAAO,MAAMK,qBAAqB,GAAGX,CAAC,CAACQ,IAAF,CAAOC,gBAAP,CAA9B,C,CAEP","sourcesContent":["import * as t from 'io-ts'\nimport { optional } from './utils'\n\n/**\n * Used for Event Listeners\n */\n\n// props\nconst ironSourceErrorProps = {\n  errorCode: t.number,\n  message: optional(t.string),\n}\n\n// codec\nexport const ironSourceErrorCodec = t.type(ironSourceErrorProps)\n\n// type\nexport type IronSourceError = t.TypeOf<typeof ironSourceErrorCodec>\n\n/**\n * iOS 14 ConsentView =========================================================\n */\n\n// props\nconst consentViewProps = {\n  ...ironSourceErrorProps,\n  consentViewType: t.string,\n}\n\n// codec\nexport const consentViewErrorCodec = t.type(consentViewProps)\n\n// type\nexport type ConsentViewError = {\n  consentViewType: string\n} & IronSourceError\n"]}